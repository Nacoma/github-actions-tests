name: Deploy
on:
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches:
      - staging
      - develop
      - main

  workflow_dispatch:
    inputs:
      environment:
        description: Choose environment
        required: true
        default: staging
        type: choice
        options:
          - develop
          - staging
          - beta
          - production

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: false

jobs:
  environment:
    runs-on: ubuntu-latest
    if: (github.event.workflow_run.event == 'push' && github.event.workflow_run.conclusion == 'success') || (github.event_name == 'workflow_dispatch' && inputs.environment)
    outputs:
      name: ${{ steps.environment.outputs.name }}
    steps:
      - name: Environment name
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            environment="${{ inputs.environment }}"
          elif [[ "${{ github.event.workflow_run.head_branch }}" == "staging" ]]; then
            environment="staging"
          else
            environment="develop"
          fi
          echo "name=${environment}" >> $GITHUB_OUTPUT
        id: environment
        shell: bash

  deploy:
    needs: [environment]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment:
      name: ${{ needs.environment.outputs.name }}
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/install-composer-deps
      - uses: ./.github/actions/install-npm-deps
      - uses: ./.github/actions/build-assets

      - name: Get application version
        id: version
        run: echo "version=${{ github.run_number }}" >> $GITHUB_OUTPUT
        shell: sh

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::121952031047:role/github-deploy-php

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get Container Url
        id: get-container-url
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: deploy-test
          IMAGE_TAG:  ${{ needs.environment.outputs.name }}-${{ steps.version.outputs.version }}
        run: echo "container=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - uses: ./.github/actions/build-eb-release-candidate
        with:
          container: ${{ steps.get-container-url.outputs.container }}
          version: ${{ steps.version.outputs.version }}

      - name: Build, tag, and push container image to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: deploy-test
          IMAGE_TAG:  ${{ needs.environment.outputs.name }}-${{ steps.version.outputs.version }}
        run: |
          docker build -t ${{ steps.get-container-url.outputs.container }} .
          docker push ${{ steps.get-container-url.outputs.container }}

      - name: Deploy!
        id: deploy
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws_session_token: ${{ env.AWS_SESSION_TOKEN }}
          application_name: deploy-test
          environment_name: Deploy-test-env
          version_label: ${{ steps.version.outputs.version }}
          deployment_package: deployment/target/www-${{ steps.version.outputs.version }}.zip
          existing_bucket_name: 800-test
          region: us-east-1
