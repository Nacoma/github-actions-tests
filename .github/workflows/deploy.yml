name: Deploy
on:
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches:
      - staging
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: Choose environment
        required: true
        default: staging
        type: choice
        options:
          - develop
          - staging
          - beta
          - production

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: false

jobs:
  environment:
    runs-on: ubuntu-latest
    if: (github.event.workflow_run.event == 'push' && github.event.workflow_run.conclusion == 'success') || (github.event_name == 'workflow_dispatch' && inputs.environment)
    outputs:
      name: ${{ steps.environment.outputs.name }}
    steps:
      - name: Environment name
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            environment="${{ inputs.environment }}"
          elif [[ "${{ github.event.workflow_run.head_branch }}" == "staging" ]]; then
            environment="stage"
          else
            environment="dev"
          fi
          echo "name=${environment}" >> $GITHUB_OUTPUT
        id: environment
        shell: bash

  deploy:
    needs: [environment]
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.environment.outputs.name }}
    steps:
      - uses: actions/checkout@v3

      - name: Get application version
        id: version
        run: echo "version=${{ github.run_number }}" >> $GITHUB_OUTPUT
        shell: sh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and publish docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: nanacoma/app-test:${{ needs.environment.outputs.name }}-${{ steps.version.outputs.version }}
          secrets: |
            "APP_VERSION=${{ steps.version.outputs.version }}"
